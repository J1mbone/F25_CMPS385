#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

class Book {
private:
    int id;
    string title;
    string author;
    int year;
    bool available;

public:

    Book() {
        id = 0;
        title = "";
        author = "";
        year = 0;
        available = true;
    }


    Book(int bookID, string bookTitle, string bookAuthor, int bookYear) {
        id = bookID;
        title = bookTitle;
        author = bookAuthor;
        year = bookYear;
        available = true;
    }

    int getID() const { return id; }
    string getTitle() const { return title; }
    string getAuthor() const { return author; }
    int getYear() const { return year; }
    bool isAvailable() const { return available; }

    void setID(int bookID) { id = bookID; }
    void setTitle(string bookTitle) { title = bookTitle; }
    void setAuthor(string bookAuthor) { author = bookAuthor; }
    void setYear(int bookYear) { year = bookYear; }

    void borrowBook() {
        if (available) {
            available = false;
            cout << "Book borrowed successfully.\n";
        } else {
            cout << "Book is currently not available.\n";
        }
    }

    void returnBook() {
        if (!available) {
            available = true;
            cout << "Book returned successfully.\n";
        } else {
            cout << "Book was not borrowed.\n";
        }
    }

    void display() const {
        cout << "ID: " << id << "\nTitle: " << title
             << "\nAuthor: " << author << "\nYear: " << year
             << "\nStatus: " << (available ? "Available" : "Borrowed") << "\n";
    }
};

int generateRandomID() {
    return rand() % 90000 + 10000;
}

int main() {
    srand(time_t(0));

    const int MAX_BOOKS = 100;
    Book books[MAX_BOOKS];
    int bookCount = 0;

    int choice;

    cout << "*************** Welcome to the Library ***************\n";

    do {
        cout << "\nPlease choose one of the following operations:\n"
             << "1. Add a new book\n"
             << "2. Borrow a book\n"
             << "3. Return a book\n"
             << "4. Display details of a book (by ID)\n"
             << "5. List all available books\n"
             << "6. Exit\n"
             << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1: {
            if (bookCount >= MAX_BOOKS) {
                cout << "Library is full. Cannot add more books.\n";
                break;
            }

            string title, author;
            int year;
            cin.ignore();
            cout << "Enter book title: ";
            getline(cin, title);
            cout << "Enter book author: ";
            getline(cin, author);
            cout << "Enter publication year: ";
            cin >> year;

            int newID = generateRandomID();
            Book newBook(newID, title, author, year);
            books[bookCount++] = newBook;

            cout << "Book added successfully. Book ID: " << newID << "\n";
            break;
        }

        case 2: {
            int id;
            cout << "Enter Book ID to borrow: ";
            cin >> id;
            bool found = false;

            for (int i = 0; i < bookCount; ++i) {
                if (books[i].getID() == id) {
                    found = true;
                    if (books[i].isAvailable()) {
                        books[i].borrowBook();
                    } else {
                        cout << "Book is currently not available.\n";
                    }
                    break;
                }
            }
            if (!found) {
                cout << "Book not found.\n";
            }
            break;
        }

        case 3: {
            int id;
            cout << "Enter Book ID to return: ";
            cin >> id;
            bool found = false;

            for (int i = 0; i < bookCount; ++i) {
                if (books[i].getID() == id) {
                    found = true;
                    books[i].returnBook();
                    break;
                }
            }
            if (!found) {
                cout << "Book not found.\n";
            }
            break;
        }

        case 4: {
            int id;
            cout << "Enter Book ID to view details: ";
            cin >> id;
            bool found = false;

            for (int i = 0; i < bookCount; ++i) {
                if (books[i].getID() == id) {
                    found = true;
                    books[i].display();
                    break;
                }
            }
            if (!found) {
                cout << "Book not found.\n";
            }
            break;
        }

        case 5: {
            bool anyAvailable = false;
            for (int i = 0; i < bookCount; ++i) {
                if (books[i].isAvailable()) {
                    books[i].display();
                    cout << "---------------------\n";
                    anyAvailable = true;
                }
            }
            if (!anyAvailable) {
                cout << "No books available at the moment.\n";
            }
            break;
        }

        case 6:
            cout << "Thank you for using the Library System! Goodbye!\n";
            break;

        default:
            cout << "Invalid choice. Please try again.\n";
        }

    } while (choice != 6);

    return 0;
}
